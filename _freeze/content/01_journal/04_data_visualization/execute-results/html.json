{
  "hash": "2e2424956702e22b115bef116449d0b2",
  "result": {
    "markdown": "---\ntitle: \"BDS Assignemtn visualization\"\nauthor: \"m_ahmed\"\ndate: \"2023-05-23\"\noutput: html_document\n---\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-1_f618d972b37eac2107aa16a87e1da6c8'}\n\n```{.r .cell-code}\n# Loading necessary libraries\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggthemes)\nlibrary(ggrepel)\nlibrary(lubridate)\n\n## Solution to Challenge 1 \ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\") %>% \n  select(location, date, total_cases) %>% \n  filter(location == \"Germany\" | location == \"United Kingdom\" | location == \"France\" |\n           location == \"Spain\" | location == \"United States\" | location == \"Europe\") %>% \n  mutate(cases_format = scales::dollar(total_cases, big.mark = \".\",\n                                       decimal.mark = \",\",\n                                       prefix = \"\",\n                                       suffix = \"\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 311516 Columns: 67\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\ncovid_data_tbl %>% \n  \n  ggplot(aes(x = date, y = total_cases, color = location)) +\n  \n  geom_line(size = 1) +\n  geom_label_repel(aes(x = date, y = total_cases, label = cases_format, fill = location),\n                   vjust = 0.7,\n                   hjust = 1.2,\n                   color = \"white\",\n                   box.padding = 0.0,\n                   min.segment.length = 0,\n                   segment.color = \"black\",\n                   data  = covid_data_tbl %>% slice(which.max(total_cases))) +\n  \n  guides(fill = FALSE) +\n  \n  expand_limits(y = 0) +\n  \n  scale_color_brewer(palette = \"Purples\") +\n  \n  scale_y_continuous(labels = scales::dollar_format(scale = 1e-6,\n                                                    prefix = \"\",\n                                                    suffix = \" M\")) +\n  \n  scale_x_date(date_labels = \"%B '%y\",\n               date_breaks = \"1 month\",\n               expand = c(0, NA)) +\n  \n  labs(\n    title = \"COVID-19 confirmed cases worldwide\",\n    subtitle = \"As of 21/05/2022\",\n    x = \"\",\n    y = \"Cumulative Cases\",\n    color = \"Country\"\n  ) +\n  \n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    axis.title = element_text(face = \"bold\"),\n    axis.text.x = element_text(angle = 45)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#> ℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\n#> of ggplot2 3.3.4.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Removed 91 rows containing missing values (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-2_6f8e596f07f728e07fb171fb21cf2b2d'}\n\n```{.r .cell-code}\n#part 02\n\nlibrary(tidyverse)\nlibrary(ggthemes)\nlibrary(ggrepel)\nlibrary(lubridate)\nlibrary(maps)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'maps'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> The following object is masked from 'package:purrr':\n#> \n#>     map\n```\n:::\n\n```{.r .cell-code}\n## Challenge 2\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\") %>% \n  mutate(mortality_rate = total_deaths / population) %>% \n  group_by(location) %>% \n  summarise(latest_mort_rate = last(mortality_rate)) %>% \n  select(location, latest_mort_rate) %>% \n  mutate(location = case_when(\n    \n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n    \n  )) %>%\n  distinct()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 311516 Columns: 67\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nworld <- map_data(\"world\")\n\ncovid_map <- merge(x = world, y = covid_data_tbl, by.x = \"region\", by.y = \"location\") %>% \n  select(region, long, lat, latest_mort_rate)\n\ncovid_map %>% \n  ggplot() +\n  \n  geom_map(aes(x = long, y = lat, map_id = region, fill = latest_mort_rate), map = world) +\n  \n  borders(\"world\", colour = \"grey85\") +\n  \n  scale_fill_continuous(labels = scales::percent_format(accuracy = 0.001), \n                        low = \"yellow\",\n                         high = \"darkred\")+\n              \n  \n  labs(\n    title = \"Confirmed COVID-19 fatalities in relation to population size\",\n    subtitle = \"Around 6.2 million COVID-19 deaths have been confirmed globally.\",\n    caption = \"Date: 22-May-2023\",\n    fill = \"Rate of Mortality\"\n  ) +\n  \n  theme_minimal() +\n  \n  theme(\n    axis.line = element_blank(),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    title = element_text(color = \"red\"),\n    legend.position = \"right\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in geom_map(aes(x = long, y = lat, map_id = region, fill =\n#> latest_mort_rate), : Ignoring unknown aesthetics: x and y\n```\n:::\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}